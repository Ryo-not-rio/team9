import pygame as py
import time
import random
import os

import beat

py.init()

img = py.image.load(os.path.join("images", "Final-challenge/Background.png"))
img = py.transform.scale(img, (settings.BLOCK_SIZE, settings.BLOCK_SIZE))
img = img.convert()
display.blit(img, position)

display = py.display.set_mode((800, 800))
clock = py.time.Clock()

font = py.font.SysFont('arial', 60)

def make_easier(beats, difficulty=1.0):
    beats = beats[:]
    for i in range(int(len(beats) - (len(beats)*difficulty))):
        beats.remove(random.choice(beats))
    return beats

game_exit = False

fps = 30
speed = 5
shift = 770/(speed*fps)
beats = [5.41656756401062, 6.405829906463623, 7.393883466720581, 8.481863975524902, 9.43835186958313, 9.844867944717407, 10.319719314575195, 10.800408124923706, 11.343102216720581, 11.821184873580933, 12.32985258102417, 12.803813695907593, 13.349077463150024, 13.792586088180542, 13.996830224990845, 14.269125938415527, 14.713839769363403, 15.224627017974854, 15.668400049209595, 15.90779733657837, 16.14711833000183, 16.65780735015869, 17.167882919311523, 17.712241888046265, 18.18793296813965, 18.626465797424316, 19.103291988372803, 19.61513066291809, 20.090892553329468, 20.600428104400635, 20.804415702819824, 21.07689881324768, 21.55154824256897, 22.02779483795166, 22.50352168083191, 22.81275200843811, 23.047069787979126, 23.489740133285522, 23.933552503585815, 24.37540054321289, 24.577093839645386, 24.849371910095215, 25.32897400856018, 25.773813247680664, 26.046049118041992, 26.216631650924683, 26.524576663970947, 26.727363109588623, 27.203561305999756, 27.68228244781494, 28.19092082977295, 28.671396255493164, 29.146124839782715, 29.58808469772339, 30.030867338180542, 30.20340347290039, 30.57690954208374, 31.052421808242798, 31.52993893623352, 32.00968623161316, 32.24702000617981, 32.488662004470825, 32.693742752075195, 32.931511640548706, 33.13696002960205, 33.409199476242065, 33.92096734046936, 34.123504638671875, 34.393521308898926, 34.86992287635803, 35.10949182510376, 35.38454508781433, 35.860318422317505, 36.371551752090454, 36.8193416595459, 37.089625120162964, 37.36086416244507, 37.767963886260986, 38.07393455505371, 38.310462474823, 38.75658059120178, 39.23130702972412, 39.70572519302368, 39.943418979644775, 40.18113446235657, 40.62552332878113, 41.133333683013916, 41.57524585723877, 42.12090754508972, 42.631795167922974, 42.868966817855835, 43.10931873321533, 43.623910665512085, 44.09839344024658, 44.577542781829834, 44.779998540878296, 45.02180337905884, 45.4327392578125, 45.943188190460205, 46.42262268066406, 46.62708353996277, 46.93360447883606, 47.4432487487793, 47.681889057159424, 47.985469341278076, 48.46375274658203, 48.94343638420105, 49.45413899421692, 49.9285569190979, 50.50540041923523, 50.7078959941864, 50.98312330245972, 51.19256138801575, 51.42996335029602, 51.671202182769775, 51.94242191314697, 52.48605179786682, 52.96300959587097, 53.37267184257507, 53.67700982093811, 53.950276613235474, 54.15376853942871, 54.358190298080444, 54.5948748588562, 54.934361696243286, 55.47888922691345, 55.954763412475586, 56.39658498764038, 56.871089220047, 57.31316018104553, 57.794726610183716, 58.26942801475525, 58.813316822052, 59.290409088134766, 59.83577585220337, 60.3115131855011, 60.824986696243286, 61.1650755405426, 61.43836808204651, 61.74454998970032, 62.33072471618652, 62.76947522163391, 63.245216608047485, 63.719913482666016, 64.43550682067871, 64.67138695716858, 65.07916045188904, 65.38756537437439, 65.66012167930603, 66.2379801273346, 66.5470802783966, 66.78667306900024, 67.1943531036377, 67.63624548912048, 68.11333513259888, 68.2838864326477, 68.5581419467926, 68.86253499984741, 69.13549065589905, 69.37435483932495, 69.64567637443542, 69.92149686813354, 70.19245147705078, 70.43148994445801, 70.6703896522522, 70.90933561325073, 71.14828562736511, 71.3527295589447, 71.65791583061218, 72.17051148414612, 72.64695858955383, 73.73980617523193, 74.69845271110535, 75.82773065567017, 76.7822163105011, 77.77267599105835, 78.86879134178162, 79.81693840026855, 80.32755470275879, 80.80363440513611, 81.27959442138672, 81.82274961471558, 82.33438205718994, 82.84074831008911, 83.35190057754517, 83.79614591598511, 84.30678272247314, 84.78153872489929, 85.22667908668518, 85.73457980155945, 86.27595567703247, 86.78481221199036, 87.2595443725586, 87.771808385849, 88.72142958641052, 89.67058610916138, 90.14352059364319, 90.69056606292725, 91.19751596450806, 91.60636520385742, 91.8786051273346, 92.11796736717224, 92.52388095855713, 93.00182604789734, 93.51224946975708, 94.05815768241882, 94.50117516517639, 94.97869634628296, 95.56019306182861, 96.00526428222656, 96.48495197296143, 96.92876553535461, 97.43997430801392, 97.9499044418335, 98.42665600776672, 98.93825674057007, 99.41247177124023, 99.88759016990662, 100.33448839187622, 100.81098508834839, 101.3582067489624, 101.76611542701721, 102.31109499931335, 102.7538800239563, 103.26647114753723, 103.50287795066833, 103.70612931251526, 103.87650203704834, 104.18664312362671, 104.45801591873169, 104.72917413711548, 105.16961574554443, 105.67868757247925, 106.15585064888, 106.59966230392456, 107.14819574356079, 107.62304592132568, 108.10053563117981, 108.57620859146118, 109.08760571479797, 109.56729006767273, 110.04501414299011, 110.52048897743225, 111.0310606956482, 111.4721474647522, 111.98178100585938, 112.39115118980408, 112.66541838645935, 112.93942165374756, 113.41817283630371, 113.92936277389526, 114.40504741668701, 114.88043189048767, 115.36075139045715, 115.84246230125427, 116.20955276489258, 116.75510740280151, 117.26552200317383, 117.7122712135315, 118.25781106948853, 118.7338879108429, 119.62117052078247, 120.64469075202942, 121.69945001602173, 122.72192192077637, 122.92709922790527, 123.1661446094513, 123.40450692176819, 123.7116847038269, 124.15604901313782, 124.42754530906677, 124.69817066192627, 125.65510749816895, 126.61128568649292, 127.1209237575531, 127.36067295074463, 127.60028553009033, 128.04128193855286, 128.3484752178192, 128.62126803398132, 129.54326248168945, 130.56312465667725, 131.62528443336487, 132.57819628715515, 133.05572867393494, 133.2910897731781, 133.56126141548157, 134.5163218975067, 134.95811653137207, 135.4694845676422, 136.45963549613953, 136.97126698493958, 137.4815366268158, 137.95805740356445, 138.43777441978455, 138.9474458694458, 139.42321848869324, 139.7977156639099, 140.17165422439575, 140.4417610168457, 141.3652901649475, 142.3188292980194, 143.26925110816956, 143.6761965751648, 144.05119109153748, 144.32422018051147, 144.80090522766113, 145.27955770492554, 145.7921280860901, 146.3344566822052, 146.8453848361969, 147.25507879257202, 147.69888734817505, 148.00532412528992, 148.27887225151062, 149.1669647693634, 150.15328526496887, 151.1778883934021, 152.16367101669312, 152.50246047973633, 152.9113667011261, 153.18216061592102, 153.62643122673035, 154.10264492034912, 154.61231184005737, 154.81823134422302, 155.05762028694153, 155.29700922966003, 155.5676667690277, 155.84370517730713, 156.07907605171204, 156.353346824646, 156.55715489387512, 156.82917141914368, 157.06732034683228, 157.33819842338562, 157.6134226322174, 157.85278344154358, 158.12508606910706, 159.0769453048706, 159.27955269813538, 159.65455055236816, 160.0305449962616, 160.2675051689148, 161.31985235214233, 162.3424379825592, 163.12419891357422, 163.368408203125, 163.73939085006714, 164.07848000526428, 164.38420462608337, 165.29905438423157, 166.35273385047913, 166.82823657989502, 167.3413598537445, 167.81822872161865, 168.32982993125916, 168.87523651123047, 169.35217666625977, 169.86380887031555, 170.30478405952454, 170.8487470149994, 171.2586863040924, 171.703510761261, 172.18120050430298, 172.65897631645203, 173.17356967926025, 173.6155321598053, 174.16002106666565, 174.60383534431458, 175.08055686950684, 175.58997750282288, 176.0684826374054, 176.54454517364502, 177.0202715396881, 177.49799394607544, 178.00763249397278, 178.48737859725952, 179.0318958759308, 179.34011244773865, 179.71608591079712, 180.01984167099, 180.3950355052948, 180.70200324058533, 180.97472548484802, 181.45048427581787, 181.92617988586426, 182.43659734725952, 182.91303968429565, 183.2868127822876, 183.63015127182007, 183.8684937953949, 184.30835890769958, 184.7489790916443, 185.25805163383484, 185.77116203308105, 186.28530287742615, 186.55778741836548, 186.76302242279053, 187.71867537498474, 188.29310822486877, 188.56737899780273, 188.73692226409912, 189.17905688285828, 189.7258768081665, 190.16892504692078, 190.71231269836426, 191.1890389919281, 191.6645474433899, 192.0724277496338, 192.58174180984497, 193.08993315696716, 193.6314549446106, 194.31136417388916, 194.5843698978424, 195.50155115127563, 196.45911717414856, 197.48176431655884, 198.43539929389954, 198.80818390846252, 199.38975977897644, 200.41325783729553, 200.9245309829712, 201.12890529632568, 201.40201425552368, 202.2512514591217, 203.20949912071228, 204.1988594532013, 204.70792531967163, 204.9143750667572, 205.2190146446228, 205.73302698135376, 206.17345666885376, 206.6850929260254, 206.85659956932068, 207.16159963607788, 207.39836025238037, 207.60273361206055, 207.8395218849182, 208.07987785339355, 208.28384232521057, 208.59353399276733, 208.79599142074585, 209.1017506122589, 209.649001121521, 209.88754725456238, 210.12668633460999, 210.5681254863739, 210.81056880950928, 211.0820128917694, 211.52398896217346, 212.03461980819702, 212.5113446712494, 213.01843070983887, 213.7669141292572, 213.97236466407776, 214.3832676410675, 214.68748545646667, 214.99165797233582, 215.40037298202515, 215.74228811264038, 215.97961401939392, 216.45537161827087, 216.966059923172, 217.71982312202454, 217.9597463607788, 218.3686933517456, 218.70778560638428, 218.9451868534088, 219.82977271080017, 220.34205889701843, 220.61488699913025, 220.85325002670288, 221.57265949249268, 221.84517812728882, 222.2523078918457, 222.55929851531982, 222.79766464233398, 223.24144411087036, 223.58204698562622, 223.8523554801941, 224.29514169692993, 224.84135460853577, 225.3173975944519, 225.79676961898804, 226.24158120155334, 226.7845435142517, 227.26223587989807, 227.78042483329773, 228.28629970550537, 228.93032479286194, 229.7437286376953, 230.08486080169678]
beat_objs = []

beat_width = 60
start_time = float('inf')
scor = 0

music = py.mixer.music.load(os.path.join("Final-challenge", "sonog.mp3"))
py.mixer.music.set_volume(0.8)

beats = make_easier(beats, 0.5)

start_buttons = []
offset = (800 - 150*4)/2
for i in range(4):
    start_buttons.append(py.Rect((offset + i*150, 300, 120, 80)))

game_state = 0
make_keys = []
while not game_exit:
    keys = []
    
    for event in py.event.get():
        if event.type == py.QUIT:
            game_exit = True
        if event.type == py.KEYDOWN:
            if game_state == 0:
                pass
            elif game_state == 1:
                if event.key == py.K_1:
                    keys.append(0)
                if event.key == py.K_2:
                    keys.append(1)
                if event.key == py.K_3:
                    keys.append(2)
                if event.key == py.K_4:
                    keys.append(3)
                if event.key == py.K_RETURN:
                    make_keys.append(time.time() - start_time)
        if event.type == py.MOUSEBUTTONUP:
            pos = py.mouse.get_pos()
            if game_state == 0:
                for i, b in enumerate(start_buttons):
                    if b.collidepoint(pos):
                        beats = make_easier(beats, (i+1)/len(start_buttons))
                        game_state = 1
                        py.mixer.music.play(-1)
                        score = 0
                        start_time = time.time()
                        

    if game_state == 1:
        while len(beats) > 0 and time.time() - start_time > (beats[0]-shift):
            beat_objs.append(beat.Beat(random.randint(0, 3)))
            del beats[0]

        for i, b in enumerate(beat_objs):
            b.pos[1] += speed
            if b.lane in keys and b.is_success():
                beat_objs[i] = None
                score += 1

        while None in beat_objs:
            beat_objs.remove(None)


    ### Drawing ###
    display.fill(py.Color('white'))

    if game_state == 0:
        font = py.font.SysFont('arial_bold', 80)
        text = font.render("Choose difficulty", False, py.Color('black'))
        display.blit(text, (100, 100))

        font = py.font.SysFont('arial', 30)
        texts = ["Easy", "Medium", "Difficult", "Impossible"]
        for i, b in enumerate(start_buttons):
            py.draw.rect(display, py.Color('black'), b, 2)
            text = font.render(texts[i], False, py.Color('black'))
            display.blit(text, (b.x + 2, b.y + 20))

    elif game_state == 1:
        for i in range(4):
            py.draw.circle(display, py.Color('lightblue'), (int(((800 - beat_width*4)/2 + beat_width/2) + i*beat_width), 770), int(beat_width/2))
        for b in beat_objs:
            b.draw(display)

    clock.tick(fps)
    py.display.update()

print(make_keys)
py.quit()
exit()